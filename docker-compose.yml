version: '3.8'

services:

    postgres:
        build: ./postgres
        container_name: postgres
        ports:
            - "5432:5432"
        volumes:
            - db-data:/var/lib/postgresql/data:z
        stdin_open: true
        env_file:
            - ./postgres/.env

    rabbitmq:
        image: rabbitmq:3-management-alpine
        container_name: rabbitmq
        volumes:
            - ./rabbitmq/data/etc/:/etc/rabbitmq/
            - ./rabbitmq/data/data/:/var/lib/rabbitmq/
            - ./rabbitmq/data/logs/:/var/log/rabbitmq/
        ports:
            - 5672:5672
            - 15672:15672

    crawl-extractors:
        build: ./crawl-extractors
        container_name: crawl-extractors
        env_file:
            - ./crawl-extractors/.env
        ports:
            - "8002:8002"
        environment:
            TZ: America/Argentina/Buenos_Aires
        depends_on:
            - rabbitmq

    search-engine:
        build: ./search-engine
        container_name: search-engine
        env_file:
            - ./search-engine/.env
        ports:
            - "8001:8001"
        environment:
            TZ: America/Argentina/Buenos_Aires
        depends_on:
            - rabbitmq

    server:
        build: ./server
        container_name: server
        env_file:
            - ./server/.env
        ports:
            - "8000:8000"
        environment:
            TZ: America/Argentina/Buenos_Aires
        depends_on:
            - rabbitmq
            - postgres

    client:
        build: ./client
        container_name: client
        env_file:
            - ./client/.env
        ports:
            - "8005:8005"
        environment:
            TZ: America/Argentina/Buenos_Aires

    article-normalizer:
        build: ./article-normalizer
        container_name: article-normalizer
        restart: always
        env_file:
            - ./article-normalizer/.env
        environment:
            TZ: America/Argentina/Buenos_Aires

# https://stackoverflow.com/questions/53342053/starting-postgres-container-with-persistant-volume-docker-compose
# docker volume inspect tesina_db-data
# /var/lib/docker/volumes/tesina_db-data/_data
volumes:
    db-data:
